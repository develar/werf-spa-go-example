{{- $ := index . 0 }}
{{- $name := index . 1 }}
{{- $sourceDir := index . 2 }}

artifact: {{ $name }}-dist
# don't use alpine https://nickjanetakis.com/blog/benchmarking-debian-vs-alpine-as-a-base-docker-image
from: {{ $.FrontendBuildImage }}
git:
  - add: /pnpm-lock.yaml
    to: /project/pnpm-lock.yaml
    stageDependencies:
      install:
        - "*"
  - add: /
    to: /project
    includePaths:
      - "{{ $sourceDir }}"
      - .eslintrc.js
      - index.html
      - package.json
      - tsconfig.json
      - "*.config.[tj]s"
    stageDependencies:
      setup:
        - "**/*"
shell:
  beforeInstall:
    - npm install -g --silent pnpm@{{ $.PnpmVersion }}
  install:
    - cd /project
    - pnpm fetch
  beforeSetup:
    - cd /project
    - pnpm install --offline
  setup:
    - cd /project
# uncomment if you need to set some VITE_ env variables
{{/*    - export VITE_AUTH0_DOMAIN={{ env "VITE_AUTH0_DOMAIN" }}*/}}
{{/*    - export VITE_AUTH0_CLIENT_ID={{ env "VITE_AUTH0_CLIENT_ID" }}*/}}
{{/*    - export VITE_AUTH0_AUDIENCE={{ env "VITE_AUTH0_AUDIENCE" }}*/}}
    - pnpm build
---
image: {{ $name }}
from: gcr.io/distroless/base-debian10
import:
  - artifact: nginx-distroless
    before: install
    add: /opt/nginx
  - artifact: {{ $name }}-dist
    before: setup
    add: /project/dist
    to: /dist
docker:
  ENTRYPOINT: ["/opt/nginx/sbin/nginx"]
